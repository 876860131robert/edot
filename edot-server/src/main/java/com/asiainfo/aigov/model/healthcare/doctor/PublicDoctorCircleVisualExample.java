package com.asiainfo.aigov.model.healthcare.doctor;

import java.util.ArrayList;
import java.util.List;

public class PublicDoctorCircleVisualExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table PUBLIC_DOCTOR_CIRCLE_VISUAL
     *
     * @mbggenerated Tue Apr 18 21:44:35 CST 2017
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table PUBLIC_DOCTOR_CIRCLE_VISUAL
     *
     * @mbggenerated Tue Apr 18 21:44:35 CST 2017
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table PUBLIC_DOCTOR_CIRCLE_VISUAL
     *
     * @mbggenerated Tue Apr 18 21:44:35 CST 2017
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PUBLIC_DOCTOR_CIRCLE_VISUAL
     *
     * @mbggenerated Tue Apr 18 21:44:35 CST 2017
     */
    public PublicDoctorCircleVisualExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PUBLIC_DOCTOR_CIRCLE_VISUAL
     *
     * @mbggenerated Tue Apr 18 21:44:35 CST 2017
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PUBLIC_DOCTOR_CIRCLE_VISUAL
     *
     * @mbggenerated Tue Apr 18 21:44:35 CST 2017
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PUBLIC_DOCTOR_CIRCLE_VISUAL
     *
     * @mbggenerated Tue Apr 18 21:44:35 CST 2017
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PUBLIC_DOCTOR_CIRCLE_VISUAL
     *
     * @mbggenerated Tue Apr 18 21:44:35 CST 2017
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PUBLIC_DOCTOR_CIRCLE_VISUAL
     *
     * @mbggenerated Tue Apr 18 21:44:35 CST 2017
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PUBLIC_DOCTOR_CIRCLE_VISUAL
     *
     * @mbggenerated Tue Apr 18 21:44:35 CST 2017
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PUBLIC_DOCTOR_CIRCLE_VISUAL
     *
     * @mbggenerated Tue Apr 18 21:44:35 CST 2017
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PUBLIC_DOCTOR_CIRCLE_VISUAL
     *
     * @mbggenerated Tue Apr 18 21:44:35 CST 2017
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PUBLIC_DOCTOR_CIRCLE_VISUAL
     *
     * @mbggenerated Tue Apr 18 21:44:35 CST 2017
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PUBLIC_DOCTOR_CIRCLE_VISUAL
     *
     * @mbggenerated Tue Apr 18 21:44:35 CST 2017
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table PUBLIC_DOCTOR_CIRCLE_VISUAL
     *
     * @mbggenerated Tue Apr 18 21:44:35 CST 2017
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andDoctorCircleVisualIdIsNull() {
            addCriterion("DOCTOR_CIRCLE_VISUAL_ID is null");
            return (Criteria) this;
        }

        public Criteria andDoctorCircleVisualIdIsNotNull() {
            addCriterion("DOCTOR_CIRCLE_VISUAL_ID is not null");
            return (Criteria) this;
        }

        public Criteria andDoctorCircleVisualIdEqualTo(String value) {
            addCriterion("DOCTOR_CIRCLE_VISUAL_ID =", value, "doctorCircleVisualId");
            return (Criteria) this;
        }

        public Criteria andDoctorCircleVisualIdNotEqualTo(String value) {
            addCriterion("DOCTOR_CIRCLE_VISUAL_ID <>", value, "doctorCircleVisualId");
            return (Criteria) this;
        }

        public Criteria andDoctorCircleVisualIdGreaterThan(String value) {
            addCriterion("DOCTOR_CIRCLE_VISUAL_ID >", value, "doctorCircleVisualId");
            return (Criteria) this;
        }

        public Criteria andDoctorCircleVisualIdGreaterThanOrEqualTo(String value) {
            addCriterion("DOCTOR_CIRCLE_VISUAL_ID >=", value, "doctorCircleVisualId");
            return (Criteria) this;
        }

        public Criteria andDoctorCircleVisualIdLessThan(String value) {
            addCriterion("DOCTOR_CIRCLE_VISUAL_ID <", value, "doctorCircleVisualId");
            return (Criteria) this;
        }

        public Criteria andDoctorCircleVisualIdLessThanOrEqualTo(String value) {
            addCriterion("DOCTOR_CIRCLE_VISUAL_ID <=", value, "doctorCircleVisualId");
            return (Criteria) this;
        }

        public Criteria andDoctorCircleVisualIdLike(String value) {
            addCriterion("DOCTOR_CIRCLE_VISUAL_ID like", value, "doctorCircleVisualId");
            return (Criteria) this;
        }

        public Criteria andDoctorCircleVisualIdNotLike(String value) {
            addCriterion("DOCTOR_CIRCLE_VISUAL_ID not like", value, "doctorCircleVisualId");
            return (Criteria) this;
        }

        public Criteria andDoctorCircleVisualIdIn(List<String> values) {
            addCriterion("DOCTOR_CIRCLE_VISUAL_ID in", values, "doctorCircleVisualId");
            return (Criteria) this;
        }

        public Criteria andDoctorCircleVisualIdNotIn(List<String> values) {
            addCriterion("DOCTOR_CIRCLE_VISUAL_ID not in", values, "doctorCircleVisualId");
            return (Criteria) this;
        }

        public Criteria andDoctorCircleVisualIdBetween(String value1, String value2) {
            addCriterion("DOCTOR_CIRCLE_VISUAL_ID between", value1, value2, "doctorCircleVisualId");
            return (Criteria) this;
        }

        public Criteria andDoctorCircleVisualIdNotBetween(String value1, String value2) {
            addCriterion("DOCTOR_CIRCLE_VISUAL_ID not between", value1, value2, "doctorCircleVisualId");
            return (Criteria) this;
        }

        public Criteria andDoctorCircleIdIsNull() {
            addCriterion("DOCTOR_CIRCLE_ID is null");
            return (Criteria) this;
        }

        public Criteria andDoctorCircleIdIsNotNull() {
            addCriterion("DOCTOR_CIRCLE_ID is not null");
            return (Criteria) this;
        }

        public Criteria andDoctorCircleIdEqualTo(String value) {
            addCriterion("DOCTOR_CIRCLE_ID =", value, "doctorCircleId");
            return (Criteria) this;
        }

        public Criteria andDoctorCircleIdNotEqualTo(String value) {
            addCriterion("DOCTOR_CIRCLE_ID <>", value, "doctorCircleId");
            return (Criteria) this;
        }

        public Criteria andDoctorCircleIdGreaterThan(String value) {
            addCriterion("DOCTOR_CIRCLE_ID >", value, "doctorCircleId");
            return (Criteria) this;
        }

        public Criteria andDoctorCircleIdGreaterThanOrEqualTo(String value) {
            addCriterion("DOCTOR_CIRCLE_ID >=", value, "doctorCircleId");
            return (Criteria) this;
        }

        public Criteria andDoctorCircleIdLessThan(String value) {
            addCriterion("DOCTOR_CIRCLE_ID <", value, "doctorCircleId");
            return (Criteria) this;
        }

        public Criteria andDoctorCircleIdLessThanOrEqualTo(String value) {
            addCriterion("DOCTOR_CIRCLE_ID <=", value, "doctorCircleId");
            return (Criteria) this;
        }

        public Criteria andDoctorCircleIdLike(String value) {
            addCriterion("DOCTOR_CIRCLE_ID like", value, "doctorCircleId");
            return (Criteria) this;
        }

        public Criteria andDoctorCircleIdNotLike(String value) {
            addCriterion("DOCTOR_CIRCLE_ID not like", value, "doctorCircleId");
            return (Criteria) this;
        }

        public Criteria andDoctorCircleIdIn(List<String> values) {
            addCriterion("DOCTOR_CIRCLE_ID in", values, "doctorCircleId");
            return (Criteria) this;
        }

        public Criteria andDoctorCircleIdNotIn(List<String> values) {
            addCriterion("DOCTOR_CIRCLE_ID not in", values, "doctorCircleId");
            return (Criteria) this;
        }

        public Criteria andDoctorCircleIdBetween(String value1, String value2) {
            addCriterion("DOCTOR_CIRCLE_ID between", value1, value2, "doctorCircleId");
            return (Criteria) this;
        }

        public Criteria andDoctorCircleIdNotBetween(String value1, String value2) {
            addCriterion("DOCTOR_CIRCLE_ID not between", value1, value2, "doctorCircleId");
            return (Criteria) this;
        }

        public Criteria andUserIdIsNull() {
            addCriterion("USER_ID is null");
            return (Criteria) this;
        }

        public Criteria andUserIdIsNotNull() {
            addCriterion("USER_ID is not null");
            return (Criteria) this;
        }

        public Criteria andUserIdEqualTo(String value) {
            addCriterion("USER_ID =", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotEqualTo(String value) {
            addCriterion("USER_ID <>", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdGreaterThan(String value) {
            addCriterion("USER_ID >", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdGreaterThanOrEqualTo(String value) {
            addCriterion("USER_ID >=", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdLessThan(String value) {
            addCriterion("USER_ID <", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdLessThanOrEqualTo(String value) {
            addCriterion("USER_ID <=", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdLike(String value) {
            addCriterion("USER_ID like", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotLike(String value) {
            addCriterion("USER_ID not like", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdIn(List<String> values) {
            addCriterion("USER_ID in", values, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotIn(List<String> values) {
            addCriterion("USER_ID not in", values, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdBetween(String value1, String value2) {
            addCriterion("USER_ID between", value1, value2, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotBetween(String value1, String value2) {
            addCriterion("USER_ID not between", value1, value2, "userId");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table PUBLIC_DOCTOR_CIRCLE_VISUAL
     *
     * @mbggenerated do_not_delete_during_merge Tue Apr 18 21:44:35 CST 2017
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table PUBLIC_DOCTOR_CIRCLE_VISUAL
     *
     * @mbggenerated Tue Apr 18 21:44:35 CST 2017
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}