package com.asiainfo.aigov.model.edot.hotLine;

import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class CityVoiceLikeExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table ED_CITY_VOICE_LIKE
     *
     * @mbggenerated Fri Jun 17 10:05:15 CST 2016
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table ED_CITY_VOICE_LIKE
     *
     * @mbggenerated Fri Jun 17 10:05:15 CST 2016
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table ED_CITY_VOICE_LIKE
     *
     * @mbggenerated Fri Jun 17 10:05:15 CST 2016
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ED_CITY_VOICE_LIKE
     *
     * @mbggenerated Fri Jun 17 10:05:15 CST 2016
     */
    public CityVoiceLikeExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ED_CITY_VOICE_LIKE
     *
     * @mbggenerated Fri Jun 17 10:05:15 CST 2016
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ED_CITY_VOICE_LIKE
     *
     * @mbggenerated Fri Jun 17 10:05:15 CST 2016
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ED_CITY_VOICE_LIKE
     *
     * @mbggenerated Fri Jun 17 10:05:15 CST 2016
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ED_CITY_VOICE_LIKE
     *
     * @mbggenerated Fri Jun 17 10:05:15 CST 2016
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ED_CITY_VOICE_LIKE
     *
     * @mbggenerated Fri Jun 17 10:05:15 CST 2016
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ED_CITY_VOICE_LIKE
     *
     * @mbggenerated Fri Jun 17 10:05:15 CST 2016
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ED_CITY_VOICE_LIKE
     *
     * @mbggenerated Fri Jun 17 10:05:15 CST 2016
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ED_CITY_VOICE_LIKE
     *
     * @mbggenerated Fri Jun 17 10:05:15 CST 2016
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ED_CITY_VOICE_LIKE
     *
     * @mbggenerated Fri Jun 17 10:05:15 CST 2016
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ED_CITY_VOICE_LIKE
     *
     * @mbggenerated Fri Jun 17 10:05:15 CST 2016
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table ED_CITY_VOICE_LIKE
     *
     * @mbggenerated Fri Jun 17 10:05:15 CST 2016
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        protected void addCriterionForJDBCDate(String condition, Date value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value.getTime()), property);
        }

        protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                dateList.add(new java.sql.Date(iter.next().getTime()));
            }
            addCriterion(condition, dateList, property);
        }

        protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
        }

        public Criteria andLikeMacIsNull() {
            addCriterion("LIKE_MAC is null");
            return (Criteria) this;
        }

        public Criteria andLikeMacIsNotNull() {
            addCriterion("LIKE_MAC is not null");
            return (Criteria) this;
        }

        public Criteria andLikeMacEqualTo(String value) {
            addCriterion("LIKE_MAC =", value, "likeMac");
            return (Criteria) this;
        }

        public Criteria andLikeMacNotEqualTo(String value) {
            addCriterion("LIKE_MAC <>", value, "likeMac");
            return (Criteria) this;
        }

        public Criteria andLikeMacGreaterThan(String value) {
            addCriterion("LIKE_MAC >", value, "likeMac");
            return (Criteria) this;
        }

        public Criteria andLikeMacGreaterThanOrEqualTo(String value) {
            addCriterion("LIKE_MAC >=", value, "likeMac");
            return (Criteria) this;
        }

        public Criteria andLikeMacLessThan(String value) {
            addCriterion("LIKE_MAC <", value, "likeMac");
            return (Criteria) this;
        }

        public Criteria andLikeMacLessThanOrEqualTo(String value) {
            addCriterion("LIKE_MAC <=", value, "likeMac");
            return (Criteria) this;
        }

        public Criteria andLikeMacLike(String value) {
            addCriterion("LIKE_MAC like", value, "likeMac");
            return (Criteria) this;
        }

        public Criteria andLikeMacNotLike(String value) {
            addCriterion("LIKE_MAC not like", value, "likeMac");
            return (Criteria) this;
        }

        public Criteria andLikeMacIn(List<String> values) {
            addCriterion("LIKE_MAC in", values, "likeMac");
            return (Criteria) this;
        }

        public Criteria andLikeMacNotIn(List<String> values) {
            addCriterion("LIKE_MAC not in", values, "likeMac");
            return (Criteria) this;
        }

        public Criteria andLikeMacBetween(String value1, String value2) {
            addCriterion("LIKE_MAC between", value1, value2, "likeMac");
            return (Criteria) this;
        }

        public Criteria andLikeMacNotBetween(String value1, String value2) {
            addCriterion("LIKE_MAC not between", value1, value2, "likeMac");
            return (Criteria) this;
        }

        public Criteria andCityVoiceIdIsNull() {
            addCriterion("CITY_VOICE_ID is null");
            return (Criteria) this;
        }

        public Criteria andCityVoiceIdIsNotNull() {
            addCriterion("CITY_VOICE_ID is not null");
            return (Criteria) this;
        }

        public Criteria andCityVoiceIdEqualTo(String value) {
            addCriterion("CITY_VOICE_ID =", value, "cityVoiceId");
            return (Criteria) this;
        }

        public Criteria andCityVoiceIdNotEqualTo(String value) {
            addCriterion("CITY_VOICE_ID <>", value, "cityVoiceId");
            return (Criteria) this;
        }

        public Criteria andCityVoiceIdGreaterThan(String value) {
            addCriterion("CITY_VOICE_ID >", value, "cityVoiceId");
            return (Criteria) this;
        }

        public Criteria andCityVoiceIdGreaterThanOrEqualTo(String value) {
            addCriterion("CITY_VOICE_ID >=", value, "cityVoiceId");
            return (Criteria) this;
        }

        public Criteria andCityVoiceIdLessThan(String value) {
            addCriterion("CITY_VOICE_ID <", value, "cityVoiceId");
            return (Criteria) this;
        }

        public Criteria andCityVoiceIdLessThanOrEqualTo(String value) {
            addCriterion("CITY_VOICE_ID <=", value, "cityVoiceId");
            return (Criteria) this;
        }

        public Criteria andCityVoiceIdLike(String value) {
            addCriterion("CITY_VOICE_ID like", value, "cityVoiceId");
            return (Criteria) this;
        }

        public Criteria andCityVoiceIdNotLike(String value) {
            addCriterion("CITY_VOICE_ID not like", value, "cityVoiceId");
            return (Criteria) this;
        }

        public Criteria andCityVoiceIdIn(List<String> values) {
            addCriterion("CITY_VOICE_ID in", values, "cityVoiceId");
            return (Criteria) this;
        }

        public Criteria andCityVoiceIdNotIn(List<String> values) {
            addCriterion("CITY_VOICE_ID not in", values, "cityVoiceId");
            return (Criteria) this;
        }

        public Criteria andCityVoiceIdBetween(String value1, String value2) {
            addCriterion("CITY_VOICE_ID between", value1, value2, "cityVoiceId");
            return (Criteria) this;
        }

        public Criteria andCityVoiceIdNotBetween(String value1, String value2) {
            addCriterion("CITY_VOICE_ID not between", value1, value2, "cityVoiceId");
            return (Criteria) this;
        }

        public Criteria andLikeIdIsNull() {
            addCriterion("LIKE_ID is null");
            return (Criteria) this;
        }

        public Criteria andLikeIdIsNotNull() {
            addCriterion("LIKE_ID is not null");
            return (Criteria) this;
        }

        public Criteria andLikeIdEqualTo(String value) {
            addCriterion("LIKE_ID =", value, "likeId");
            return (Criteria) this;
        }

        public Criteria andLikeIdNotEqualTo(String value) {
            addCriterion("LIKE_ID <>", value, "likeId");
            return (Criteria) this;
        }

        public Criteria andLikeIdGreaterThan(String value) {
            addCriterion("LIKE_ID >", value, "likeId");
            return (Criteria) this;
        }

        public Criteria andLikeIdGreaterThanOrEqualTo(String value) {
            addCriterion("LIKE_ID >=", value, "likeId");
            return (Criteria) this;
        }

        public Criteria andLikeIdLessThan(String value) {
            addCriterion("LIKE_ID <", value, "likeId");
            return (Criteria) this;
        }

        public Criteria andLikeIdLessThanOrEqualTo(String value) {
            addCriterion("LIKE_ID <=", value, "likeId");
            return (Criteria) this;
        }

        public Criteria andLikeIdLike(String value) {
            addCriterion("LIKE_ID like", value, "likeId");
            return (Criteria) this;
        }

        public Criteria andLikeIdNotLike(String value) {
            addCriterion("LIKE_ID not like", value, "likeId");
            return (Criteria) this;
        }

        public Criteria andLikeIdIn(List<String> values) {
            addCriterion("LIKE_ID in", values, "likeId");
            return (Criteria) this;
        }

        public Criteria andLikeIdNotIn(List<String> values) {
            addCriterion("LIKE_ID not in", values, "likeId");
            return (Criteria) this;
        }

        public Criteria andLikeIdBetween(String value1, String value2) {
            addCriterion("LIKE_ID between", value1, value2, "likeId");
            return (Criteria) this;
        }

        public Criteria andLikeIdNotBetween(String value1, String value2) {
            addCriterion("LIKE_ID not between", value1, value2, "likeId");
            return (Criteria) this;
        }

        public Criteria andLikeCreateTimeIsNull() {
            addCriterion("LIKE_CREATE_TIME is null");
            return (Criteria) this;
        }

        public Criteria andLikeCreateTimeIsNotNull() {
            addCriterion("LIKE_CREATE_TIME is not null");
            return (Criteria) this;
        }

        public Criteria andLikeCreateTimeEqualTo(Date value) {
            addCriterionForJDBCDate("LIKE_CREATE_TIME =", value, "likeCreateTime");
            return (Criteria) this;
        }

        public Criteria andLikeCreateTimeNotEqualTo(Date value) {
            addCriterionForJDBCDate("LIKE_CREATE_TIME <>", value, "likeCreateTime");
            return (Criteria) this;
        }

        public Criteria andLikeCreateTimeGreaterThan(Date value) {
            addCriterionForJDBCDate("LIKE_CREATE_TIME >", value, "likeCreateTime");
            return (Criteria) this;
        }

        public Criteria andLikeCreateTimeGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("LIKE_CREATE_TIME >=", value, "likeCreateTime");
            return (Criteria) this;
        }

        public Criteria andLikeCreateTimeLessThan(Date value) {
            addCriterionForJDBCDate("LIKE_CREATE_TIME <", value, "likeCreateTime");
            return (Criteria) this;
        }

        public Criteria andLikeCreateTimeLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("LIKE_CREATE_TIME <=", value, "likeCreateTime");
            return (Criteria) this;
        }

        public Criteria andLikeCreateTimeIn(List<Date> values) {
            addCriterionForJDBCDate("LIKE_CREATE_TIME in", values, "likeCreateTime");
            return (Criteria) this;
        }

        public Criteria andLikeCreateTimeNotIn(List<Date> values) {
            addCriterionForJDBCDate("LIKE_CREATE_TIME not in", values, "likeCreateTime");
            return (Criteria) this;
        }

        public Criteria andLikeCreateTimeBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("LIKE_CREATE_TIME between", value1, value2, "likeCreateTime");
            return (Criteria) this;
        }

        public Criteria andLikeCreateTimeNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("LIKE_CREATE_TIME not between", value1, value2, "likeCreateTime");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table ED_CITY_VOICE_LIKE
     *
     * @mbggenerated do_not_delete_during_merge Fri Jun 17 10:05:15 CST 2016
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table ED_CITY_VOICE_LIKE
     *
     * @mbggenerated Fri Jun 17 10:05:15 CST 2016
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}