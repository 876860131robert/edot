package com.asiainfo.aigov.model.healthcare.attention;

import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class PublicUserDoctorAttentionExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table PUBLIC_USER_DOCTOR_ATTENTION
     *
     * @mbggenerated Thu Apr 20 15:54:04 CST 2017
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table PUBLIC_USER_DOCTOR_ATTENTION
     *
     * @mbggenerated Thu Apr 20 15:54:04 CST 2017
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table PUBLIC_USER_DOCTOR_ATTENTION
     *
     * @mbggenerated Thu Apr 20 15:54:04 CST 2017
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PUBLIC_USER_DOCTOR_ATTENTION
     *
     * @mbggenerated Thu Apr 20 15:54:04 CST 2017
     */
    public PublicUserDoctorAttentionExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PUBLIC_USER_DOCTOR_ATTENTION
     *
     * @mbggenerated Thu Apr 20 15:54:04 CST 2017
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PUBLIC_USER_DOCTOR_ATTENTION
     *
     * @mbggenerated Thu Apr 20 15:54:04 CST 2017
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PUBLIC_USER_DOCTOR_ATTENTION
     *
     * @mbggenerated Thu Apr 20 15:54:04 CST 2017
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PUBLIC_USER_DOCTOR_ATTENTION
     *
     * @mbggenerated Thu Apr 20 15:54:04 CST 2017
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PUBLIC_USER_DOCTOR_ATTENTION
     *
     * @mbggenerated Thu Apr 20 15:54:04 CST 2017
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PUBLIC_USER_DOCTOR_ATTENTION
     *
     * @mbggenerated Thu Apr 20 15:54:04 CST 2017
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PUBLIC_USER_DOCTOR_ATTENTION
     *
     * @mbggenerated Thu Apr 20 15:54:04 CST 2017
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PUBLIC_USER_DOCTOR_ATTENTION
     *
     * @mbggenerated Thu Apr 20 15:54:04 CST 2017
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PUBLIC_USER_DOCTOR_ATTENTION
     *
     * @mbggenerated Thu Apr 20 15:54:04 CST 2017
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PUBLIC_USER_DOCTOR_ATTENTION
     *
     * @mbggenerated Thu Apr 20 15:54:04 CST 2017
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table PUBLIC_USER_DOCTOR_ATTENTION
     *
     * @mbggenerated Thu Apr 20 15:54:04 CST 2017
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        protected void addCriterionForJDBCDate(String condition, Date value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value.getTime()), property);
        }

        protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                dateList.add(new java.sql.Date(iter.next().getTime()));
            }
            addCriterion(condition, dateList, property);
        }

        protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
        }

        public Criteria andIdIsNull() {
            addCriterion("ID is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("ID is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(String value) {
            addCriterion("ID =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(String value) {
            addCriterion("ID <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(String value) {
            addCriterion("ID >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(String value) {
            addCriterion("ID >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(String value) {
            addCriterion("ID <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(String value) {
            addCriterion("ID <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLike(String value) {
            addCriterion("ID like", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotLike(String value) {
            addCriterion("ID not like", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<String> values) {
            addCriterion("ID in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<String> values) {
            addCriterion("ID not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(String value1, String value2) {
            addCriterion("ID between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(String value1, String value2) {
            addCriterion("ID not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andUserIdIsNull() {
            addCriterion("USER_ID is null");
            return (Criteria) this;
        }

        public Criteria andUserIdIsNotNull() {
            addCriterion("USER_ID is not null");
            return (Criteria) this;
        }

        public Criteria andUserIdEqualTo(String value) {
            addCriterion("USER_ID =", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotEqualTo(String value) {
            addCriterion("USER_ID <>", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdGreaterThan(String value) {
            addCriterion("USER_ID >", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdGreaterThanOrEqualTo(String value) {
            addCriterion("USER_ID >=", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdLessThan(String value) {
            addCriterion("USER_ID <", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdLessThanOrEqualTo(String value) {
            addCriterion("USER_ID <=", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdLike(String value) {
            addCriterion("USER_ID like", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotLike(String value) {
            addCriterion("USER_ID not like", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdIn(List<String> values) {
            addCriterion("USER_ID in", values, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotIn(List<String> values) {
            addCriterion("USER_ID not in", values, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdBetween(String value1, String value2) {
            addCriterion("USER_ID between", value1, value2, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotBetween(String value1, String value2) {
            addCriterion("USER_ID not between", value1, value2, "userId");
            return (Criteria) this;
        }

        public Criteria andDoctorIdIsNull() {
            addCriterion("DOCTOR_ID is null");
            return (Criteria) this;
        }

        public Criteria andDoctorIdIsNotNull() {
            addCriterion("DOCTOR_ID is not null");
            return (Criteria) this;
        }

        public Criteria andDoctorIdEqualTo(String value) {
            addCriterion("DOCTOR_ID =", value, "doctorId");
            return (Criteria) this;
        }

        public Criteria andDoctorIdNotEqualTo(String value) {
            addCriterion("DOCTOR_ID <>", value, "doctorId");
            return (Criteria) this;
        }

        public Criteria andDoctorIdGreaterThan(String value) {
            addCriterion("DOCTOR_ID >", value, "doctorId");
            return (Criteria) this;
        }

        public Criteria andDoctorIdGreaterThanOrEqualTo(String value) {
            addCriterion("DOCTOR_ID >=", value, "doctorId");
            return (Criteria) this;
        }

        public Criteria andDoctorIdLessThan(String value) {
            addCriterion("DOCTOR_ID <", value, "doctorId");
            return (Criteria) this;
        }

        public Criteria andDoctorIdLessThanOrEqualTo(String value) {
            addCriterion("DOCTOR_ID <=", value, "doctorId");
            return (Criteria) this;
        }

        public Criteria andDoctorIdLike(String value) {
            addCriterion("DOCTOR_ID like", value, "doctorId");
            return (Criteria) this;
        }

        public Criteria andDoctorIdNotLike(String value) {
            addCriterion("DOCTOR_ID not like", value, "doctorId");
            return (Criteria) this;
        }

        public Criteria andDoctorIdIn(List<String> values) {
            addCriterion("DOCTOR_ID in", values, "doctorId");
            return (Criteria) this;
        }

        public Criteria andDoctorIdNotIn(List<String> values) {
            addCriterion("DOCTOR_ID not in", values, "doctorId");
            return (Criteria) this;
        }

        public Criteria andDoctorIdBetween(String value1, String value2) {
            addCriterion("DOCTOR_ID between", value1, value2, "doctorId");
            return (Criteria) this;
        }

        public Criteria andDoctorIdNotBetween(String value1, String value2) {
            addCriterion("DOCTOR_ID not between", value1, value2, "doctorId");
            return (Criteria) this;
        }

        public Criteria andAttentionTimeIsNull() {
            addCriterion("ATTENTION_TIME is null");
            return (Criteria) this;
        }

        public Criteria andAttentionTimeIsNotNull() {
            addCriterion("ATTENTION_TIME is not null");
            return (Criteria) this;
        }

        public Criteria andAttentionTimeEqualTo(Date value) {
            addCriterionForJDBCDate("ATTENTION_TIME =", value, "attentionTime");
            return (Criteria) this;
        }

        public Criteria andAttentionTimeNotEqualTo(Date value) {
            addCriterionForJDBCDate("ATTENTION_TIME <>", value, "attentionTime");
            return (Criteria) this;
        }

        public Criteria andAttentionTimeGreaterThan(Date value) {
            addCriterionForJDBCDate("ATTENTION_TIME >", value, "attentionTime");
            return (Criteria) this;
        }

        public Criteria andAttentionTimeGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("ATTENTION_TIME >=", value, "attentionTime");
            return (Criteria) this;
        }

        public Criteria andAttentionTimeLessThan(Date value) {
            addCriterionForJDBCDate("ATTENTION_TIME <", value, "attentionTime");
            return (Criteria) this;
        }

        public Criteria andAttentionTimeLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("ATTENTION_TIME <=", value, "attentionTime");
            return (Criteria) this;
        }

        public Criteria andAttentionTimeIn(List<Date> values) {
            addCriterionForJDBCDate("ATTENTION_TIME in", values, "attentionTime");
            return (Criteria) this;
        }

        public Criteria andAttentionTimeNotIn(List<Date> values) {
            addCriterionForJDBCDate("ATTENTION_TIME not in", values, "attentionTime");
            return (Criteria) this;
        }

        public Criteria andAttentionTimeBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("ATTENTION_TIME between", value1, value2, "attentionTime");
            return (Criteria) this;
        }

        public Criteria andAttentionTimeNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("ATTENTION_TIME not between", value1, value2, "attentionTime");
            return (Criteria) this;
        }

        public Criteria andUnattentionTimeIsNull() {
            addCriterion("UNATTENTION_TIME is null");
            return (Criteria) this;
        }

        public Criteria andUnattentionTimeIsNotNull() {
            addCriterion("UNATTENTION_TIME is not null");
            return (Criteria) this;
        }

        public Criteria andUnattentionTimeEqualTo(Date value) {
            addCriterionForJDBCDate("UNATTENTION_TIME =", value, "unattentionTime");
            return (Criteria) this;
        }

        public Criteria andUnattentionTimeNotEqualTo(Date value) {
            addCriterionForJDBCDate("UNATTENTION_TIME <>", value, "unattentionTime");
            return (Criteria) this;
        }

        public Criteria andUnattentionTimeGreaterThan(Date value) {
            addCriterionForJDBCDate("UNATTENTION_TIME >", value, "unattentionTime");
            return (Criteria) this;
        }

        public Criteria andUnattentionTimeGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("UNATTENTION_TIME >=", value, "unattentionTime");
            return (Criteria) this;
        }

        public Criteria andUnattentionTimeLessThan(Date value) {
            addCriterionForJDBCDate("UNATTENTION_TIME <", value, "unattentionTime");
            return (Criteria) this;
        }

        public Criteria andUnattentionTimeLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("UNATTENTION_TIME <=", value, "unattentionTime");
            return (Criteria) this;
        }

        public Criteria andUnattentionTimeIn(List<Date> values) {
            addCriterionForJDBCDate("UNATTENTION_TIME in", values, "unattentionTime");
            return (Criteria) this;
        }

        public Criteria andUnattentionTimeNotIn(List<Date> values) {
            addCriterionForJDBCDate("UNATTENTION_TIME not in", values, "unattentionTime");
            return (Criteria) this;
        }

        public Criteria andUnattentionTimeBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("UNATTENTION_TIME between", value1, value2, "unattentionTime");
            return (Criteria) this;
        }

        public Criteria andUnattentionTimeNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("UNATTENTION_TIME not between", value1, value2, "unattentionTime");
            return (Criteria) this;
        }

        public Criteria andAttentionStatusIsNull() {
            addCriterion("ATTENTION_STATUS is null");
            return (Criteria) this;
        }

        public Criteria andAttentionStatusIsNotNull() {
            addCriterion("ATTENTION_STATUS is not null");
            return (Criteria) this;
        }

        public Criteria andAttentionStatusEqualTo(String value) {
            addCriterion("ATTENTION_STATUS =", value, "attentionStatus");
            return (Criteria) this;
        }

        public Criteria andAttentionStatusNotEqualTo(String value) {
            addCriterion("ATTENTION_STATUS <>", value, "attentionStatus");
            return (Criteria) this;
        }

        public Criteria andAttentionStatusGreaterThan(String value) {
            addCriterion("ATTENTION_STATUS >", value, "attentionStatus");
            return (Criteria) this;
        }

        public Criteria andAttentionStatusGreaterThanOrEqualTo(String value) {
            addCriterion("ATTENTION_STATUS >=", value, "attentionStatus");
            return (Criteria) this;
        }

        public Criteria andAttentionStatusLessThan(String value) {
            addCriterion("ATTENTION_STATUS <", value, "attentionStatus");
            return (Criteria) this;
        }

        public Criteria andAttentionStatusLessThanOrEqualTo(String value) {
            addCriterion("ATTENTION_STATUS <=", value, "attentionStatus");
            return (Criteria) this;
        }

        public Criteria andAttentionStatusLike(String value) {
            addCriterion("ATTENTION_STATUS like", value, "attentionStatus");
            return (Criteria) this;
        }

        public Criteria andAttentionStatusNotLike(String value) {
            addCriterion("ATTENTION_STATUS not like", value, "attentionStatus");
            return (Criteria) this;
        }

        public Criteria andAttentionStatusIn(List<String> values) {
            addCriterion("ATTENTION_STATUS in", values, "attentionStatus");
            return (Criteria) this;
        }

        public Criteria andAttentionStatusNotIn(List<String> values) {
            addCriterion("ATTENTION_STATUS not in", values, "attentionStatus");
            return (Criteria) this;
        }

        public Criteria andAttentionStatusBetween(String value1, String value2) {
            addCriterion("ATTENTION_STATUS between", value1, value2, "attentionStatus");
            return (Criteria) this;
        }

        public Criteria andAttentionStatusNotBetween(String value1, String value2) {
            addCriterion("ATTENTION_STATUS not between", value1, value2, "attentionStatus");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table PUBLIC_USER_DOCTOR_ATTENTION
     *
     * @mbggenerated do_not_delete_during_merge Thu Apr 20 15:54:04 CST 2017
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table PUBLIC_USER_DOCTOR_ATTENTION
     *
     * @mbggenerated Thu Apr 20 15:54:04 CST 2017
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}